// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: executor/executor.proto

package executor

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExecutorProtocol int32

const (
	ExecutorProtocol_HTTP ExecutorProtocol = 0
	ExecutorProtocol_GRPC ExecutorProtocol = 1
)

// Enum value maps for ExecutorProtocol.
var (
	ExecutorProtocol_name = map[int32]string{
		0: "HTTP",
		1: "GRPC",
	}
	ExecutorProtocol_value = map[string]int32{
		"HTTP": 0,
		"GRPC": 1,
	}
)

func (x ExecutorProtocol) Enum() *ExecutorProtocol {
	p := new(ExecutorProtocol)
	*p = x
	return p
}

func (x ExecutorProtocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutorProtocol) Descriptor() protoreflect.EnumDescriptor {
	return file_executor_executor_proto_enumTypes[0].Descriptor()
}

func (ExecutorProtocol) Type() protoreflect.EnumType {
	return &file_executor_executor_proto_enumTypes[0]
}

func (x ExecutorProtocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutorProtocol.Descriptor instead.
func (ExecutorProtocol) EnumDescriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{0}
}

type ExecutorRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExecutorName     string           `protobuf:"bytes,1,opt,name=executor_name,json=executorName,proto3" json:"executor_name,omitempty"`
	ExecutorProtocol ExecutorProtocol `protobuf:"varint,2,opt,name=executor_protocol,json=executorProtocol,proto3,enum=api.executor.ExecutorProtocol" json:"executor_protocol,omitempty"`
	ExecutorAddr     string           `protobuf:"bytes,3,opt,name=executor_addr,json=executorAddr,proto3" json:"executor_addr,omitempty"`
	ExecutorPort     int32            `protobuf:"varint,4,opt,name=executor_port,json=executorPort,proto3" json:"executor_port,omitempty"`
	ExecutorDsn      string           `protobuf:"bytes,5,opt,name=executor_dsn,json=executorDsn,proto3" json:"executor_dsn,omitempty"`
}

func (x *ExecutorRegisterRequest) Reset() {
	*x = ExecutorRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorRegisterRequest) ProtoMessage() {}

func (x *ExecutorRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorRegisterRequest.ProtoReflect.Descriptor instead.
func (*ExecutorRegisterRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{0}
}

func (x *ExecutorRegisterRequest) GetExecutorName() string {
	if x != nil {
		return x.ExecutorName
	}
	return ""
}

func (x *ExecutorRegisterRequest) GetExecutorProtocol() ExecutorProtocol {
	if x != nil {
		return x.ExecutorProtocol
	}
	return ExecutorProtocol_HTTP
}

func (x *ExecutorRegisterRequest) GetExecutorAddr() string {
	if x != nil {
		return x.ExecutorAddr
	}
	return ""
}

func (x *ExecutorRegisterRequest) GetExecutorPort() int32 {
	if x != nil {
		return x.ExecutorPort
	}
	return 0
}

func (x *ExecutorRegisterRequest) GetExecutorDsn() string {
	if x != nil {
		return x.ExecutorDsn
	}
	return ""
}

type ExecutorRegisterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ExecutorRegisterReply) Reset() {
	*x = ExecutorRegisterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorRegisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorRegisterReply) ProtoMessage() {}

func (x *ExecutorRegisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorRegisterReply.ProtoReflect.Descriptor instead.
func (*ExecutorRegisterReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{1}
}

func (x *ExecutorRegisterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecutorRegisterReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ExecutorDeregisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ExecutorDeregisterRequest) Reset() {
	*x = ExecutorDeregisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorDeregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorDeregisterRequest) ProtoMessage() {}

func (x *ExecutorDeregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorDeregisterRequest.ProtoReflect.Descriptor instead.
func (*ExecutorDeregisterRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{2}
}

func (x *ExecutorDeregisterRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ExecutorDeregisterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ExecutorDeregisterReply) Reset() {
	*x = ExecutorDeregisterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecutorDeregisterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorDeregisterReply) ProtoMessage() {}

func (x *ExecutorDeregisterReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorDeregisterReply.ProtoReflect.Descriptor instead.
func (*ExecutorDeregisterReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutorDeregisterReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type RunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UnitName string `protobuf:"bytes,2,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
	UnitArgs string `protobuf:"bytes,3,opt,name=unit_args,json=unitArgs,proto3" json:"unit_args,omitempty"`
}

func (x *RunRequest) Reset() {
	*x = RunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunRequest) ProtoMessage() {}

func (x *RunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunRequest.ProtoReflect.Descriptor instead.
func (*RunRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{4}
}

func (x *RunRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RunRequest) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *RunRequest) GetUnitArgs() string {
	if x != nil {
		return x.UnitArgs
	}
	return ""
}

type RunReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Remark  string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *RunReply) Reset() {
	*x = RunReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunReply) ProtoMessage() {}

func (x *RunReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunReply.ProtoReflect.Descriptor instead.
func (*RunReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{5}
}

func (x *RunReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RunReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RunReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *RunReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type KillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UnitName string `protobuf:"bytes,2,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
}

func (x *KillRequest) Reset() {
	*x = KillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRequest) ProtoMessage() {}

func (x *KillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRequest.ProtoReflect.Descriptor instead.
func (*KillRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{6}
}

func (x *KillRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KillRequest) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

type KillReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KillReply) Reset() {
	*x = KillReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillReply) ProtoMessage() {}

func (x *KillReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillReply.ProtoReflect.Descriptor instead.
func (*KillReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{7}
}

func (x *KillReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *KillReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KillReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type UnitLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	UnitName string `protobuf:"bytes,2,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
}

func (x *UnitLogRequest) Reset() {
	*x = UnitLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitLogRequest) ProtoMessage() {}

func (x *UnitLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitLogRequest.ProtoReflect.Descriptor instead.
func (*UnitLogRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{8}
}

func (x *UnitLogRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UnitLogRequest) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

type UnitLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	UnitName string `protobuf:"bytes,2,opt,name=unit_name,json=unitName,proto3" json:"unit_name,omitempty"`
	Log      string `protobuf:"bytes,3,opt,name=log,proto3" json:"log,omitempty"`
	Error    string `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *UnitLog) Reset() {
	*x = UnitLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitLog) ProtoMessage() {}

func (x *UnitLog) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitLog.ProtoReflect.Descriptor instead.
func (*UnitLog) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{9}
}

func (x *UnitLog) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *UnitLog) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *UnitLog) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *UnitLog) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type UnitLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool       `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Logs    []*UnitLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *UnitLogReply) Reset() {
	*x = UnitLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnitLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnitLogReply) ProtoMessage() {}

func (x *UnitLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnitLogReply.ProtoReflect.Descriptor instead.
func (*UnitLogReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{10}
}

func (x *UnitLogReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnitLogReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UnitLogReply) GetLogs() []*UnitLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type BeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BeatRequest) Reset() {
	*x = BeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatRequest) ProtoMessage() {}

func (x *BeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatRequest.ProtoReflect.Descriptor instead.
func (*BeatRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{11}
}

type BeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *BeatReply) Reset() {
	*x = BeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeatReply) ProtoMessage() {}

func (x *BeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeatReply.ProtoReflect.Descriptor instead.
func (*BeatReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{12}
}

func (x *BeatReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BeatReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type IdleBeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IdleBeatRequest) Reset() {
	*x = IdleBeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdleBeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdleBeatRequest) ProtoMessage() {}

func (x *IdleBeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdleBeatRequest.ProtoReflect.Descriptor instead.
func (*IdleBeatRequest) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{13}
}

type IdleBeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Key     string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Reason  string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *IdleBeatReply) Reset() {
	*x = IdleBeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_executor_executor_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdleBeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdleBeatReply) ProtoMessage() {}

func (x *IdleBeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_executor_executor_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdleBeatReply.ProtoReflect.Descriptor instead.
func (*IdleBeatReply) Descriptor() ([]byte, []int) {
	return file_executor_executor_proto_rawDescGZIP(), []int{14}
}

func (x *IdleBeatReply) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *IdleBeatReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IdleBeatReply) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_executor_executor_proto protoreflect.FileDescriptor

var file_executor_executor_proto_rawDesc = []byte{
	0x0a, 0x17, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x01, 0x0a, 0x17, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x64, 0x73, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x44, 0x73, 0x6e,
	0x22, 0x43, 0x0a, 0x15, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2d, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f,
	0x72, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x17, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x58, 0x0a, 0x0a, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e,
	0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x61,
	0x72, 0x67, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x41,
	0x72, 0x67, 0x73, 0x22, 0x66, 0x0a, 0x08, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x3c, 0x0a, 0x0b, 0x4b,
	0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x4b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x0e, 0x55, 0x6e,
	0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x07, 0x55,
	0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x65, 0x0a, 0x0c, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67,
	0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x0d, 0x0a, 0x0b, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x09, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x11,
	0x0a, 0x0f, 0x49, 0x64, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x53, 0x0a, 0x0d, 0x49, 0x64, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0x26, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54,
	0x54, 0x50, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x52, 0x50, 0x43, 0x10, 0x01, 0x32, 0x90,
	0x02, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x72, 0x12, 0x78, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x80,
	0x01, 0x0a, 0x0a, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x44, 0x65,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x32, 0xe3, 0x03, 0x0a, 0x08, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x12, 0x54,
	0x0a, 0x03, 0x52, 0x75, 0x6e, 0x12, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a,
	0x01, 0x2a, 0x22, 0x10, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x75, 0x6e, 0x12, 0x58, 0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x63,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x1c, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01,
	0x2a, 0x22, 0x10, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x6c, 0x6f, 0x67, 0x12, 0x58, 0x0a, 0x04, 0x42, 0x65, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x42, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x65, 0x61, 0x74, 0x12, 0x68, 0x0a,
	0x08, 0x49, 0x64, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x74, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x64, 0x6c, 0x65, 0x42, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2e, 0x49, 0x64, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a,
	0x22, 0x15, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x64, 0x6c, 0x65, 0x62, 0x65, 0x61, 0x74, 0x42, 0x40, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x2f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x3b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_executor_executor_proto_rawDescOnce sync.Once
	file_executor_executor_proto_rawDescData = file_executor_executor_proto_rawDesc
)

func file_executor_executor_proto_rawDescGZIP() []byte {
	file_executor_executor_proto_rawDescOnce.Do(func() {
		file_executor_executor_proto_rawDescData = protoimpl.X.CompressGZIP(file_executor_executor_proto_rawDescData)
	})
	return file_executor_executor_proto_rawDescData
}

var file_executor_executor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_executor_executor_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_executor_executor_proto_goTypes = []interface{}{
	(ExecutorProtocol)(0),             // 0: api.executor.ExecutorProtocol
	(*ExecutorRegisterRequest)(nil),   // 1: api.executor.ExecutorRegisterRequest
	(*ExecutorRegisterReply)(nil),     // 2: api.executor.ExecutorRegisterReply
	(*ExecutorDeregisterRequest)(nil), // 3: api.executor.ExecutorDeregisterRequest
	(*ExecutorDeregisterReply)(nil),   // 4: api.executor.ExecutorDeregisterReply
	(*RunRequest)(nil),                // 5: api.executor.RunRequest
	(*RunReply)(nil),                  // 6: api.executor.RunReply
	(*KillRequest)(nil),               // 7: api.executor.KillRequest
	(*KillReply)(nil),                 // 8: api.executor.KillReply
	(*UnitLogRequest)(nil),            // 9: api.executor.UnitLogRequest
	(*UnitLog)(nil),                   // 10: api.executor.UnitLog
	(*UnitLogReply)(nil),              // 11: api.executor.UnitLogReply
	(*BeatRequest)(nil),               // 12: api.executor.BeatRequest
	(*BeatReply)(nil),                 // 13: api.executor.BeatReply
	(*IdleBeatRequest)(nil),           // 14: api.executor.IdleBeatRequest
	(*IdleBeatReply)(nil),             // 15: api.executor.IdleBeatReply
}
var file_executor_executor_proto_depIdxs = []int32{
	0,  // 0: api.executor.ExecutorRegisterRequest.executor_protocol:type_name -> api.executor.ExecutorProtocol
	10, // 1: api.executor.UnitLogReply.logs:type_name -> api.executor.UnitLog
	1,  // 2: api.executor.ExecutorRegistrar.Register:input_type -> api.executor.ExecutorRegisterRequest
	3,  // 3: api.executor.ExecutorRegistrar.Deregister:input_type -> api.executor.ExecutorDeregisterRequest
	5,  // 4: api.executor.Executor.Run:input_type -> api.executor.RunRequest
	7,  // 5: api.executor.Executor.Kill:input_type -> api.executor.KillRequest
	9,  // 6: api.executor.Executor.GetUnitLog:input_type -> api.executor.UnitLogRequest
	12, // 7: api.executor.Executor.Beat:input_type -> api.executor.BeatRequest
	14, // 8: api.executor.Executor.IdleBeat:input_type -> api.executor.IdleBeatRequest
	2,  // 9: api.executor.ExecutorRegistrar.Register:output_type -> api.executor.ExecutorRegisterReply
	4,  // 10: api.executor.ExecutorRegistrar.Deregister:output_type -> api.executor.ExecutorDeregisterReply
	6,  // 11: api.executor.Executor.Run:output_type -> api.executor.RunReply
	8,  // 12: api.executor.Executor.Kill:output_type -> api.executor.KillReply
	11, // 13: api.executor.Executor.GetUnitLog:output_type -> api.executor.UnitLogReply
	13, // 14: api.executor.Executor.Beat:output_type -> api.executor.BeatReply
	15, // 15: api.executor.Executor.IdleBeat:output_type -> api.executor.IdleBeatReply
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_executor_executor_proto_init() }
func file_executor_executor_proto_init() {
	if File_executor_executor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_executor_executor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorRegisterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorDeregisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecutorDeregisterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnitLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdleBeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_executor_executor_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdleBeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_executor_executor_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_executor_executor_proto_goTypes,
		DependencyIndexes: file_executor_executor_proto_depIdxs,
		EnumInfos:         file_executor_executor_proto_enumTypes,
		MessageInfos:      file_executor_executor_proto_msgTypes,
	}.Build()
	File_executor_executor_proto = out.File
	file_executor_executor_proto_rawDesc = nil
	file_executor_executor_proto_goTypes = nil
	file_executor_executor_proto_depIdxs = nil
}
